/* Author(s): Yusuf Bhyat - 4105558614, Kevin Ewald - 8103677414
// Purpose: ASP.NET C# Web_Based Application - TechSupport Project 
//          This page styles the Masterpage which applies a common style to the entire site
// Known bugs: None at the time of testing
// Version: 1.0 */

/*
   NOTE: Before creating new styles, check to see if one already exists which does what you want.
         Remember to add a comment block above your styles so that it is easy to see what they do.
         Remember that you can apply multiple style classes to a single item using: CssClass="classOne classTwo classThree etc"
         ***** DELETE THIS COMMENT BEFORE RELEASE *****
*/

body {
    color: #FFFFFF;
    font-family: Arial, Helvetica, sans-serif;
    font-size: .80em;
    background-color: #294e60;
    padding: 0px;
    margin: 0px;
}

a:hover {
    color: #FF0000;
    text-decoration: underline overline;
}

a:link, a:visited {
    color: #00FFFF;
    text-align: left;
}

a:active {
    color: #00FFFF;
}

h1 {
    padding: 10px;
    text-align: center;
}

.menu ul li a {
    border: 10px solid #FFFFFF;
    color: #000000;
    text-decoration: none;
    padding: 4px 40px 4px 40px;
    display: block;
    white-space: nowrap;
    font-variant: normal;
    text-align: center;
    font-weight: bold;
}

    .menu ul li a:hover {
        background-color:#bfcbd6;
        color:#465c71;
        text-decoration:none;
    }

    .header {
    border: thin none #000000;
    background-color:#fff;
}

#menuPanel {
    background-color: #fff;
}

/* Used to align text in the centre of a div/container */
.centered {
    text-align: center;
}

.FullWidth {
    width: 100%;
}


.GridViewStyleXLarge {
    width: 90%;
    padding-left: 5%;
    padding-right: 5%;
    margin-left: 5%;
    margin-right: 5%;
}

/*Used to set the width of a gridview and align it in the centre of the screen (best used with gridViews that have many columns or have rows that are content heavy such as description)*/
/* Use the indent10Percent class in order to align controls with a gridview that uses this class */
.GridViewStyleLarge {
    width: 80%;
    padding-left: 10%;
    padding-right: 10%;
    margin-left: 10%;
    margin-right: 10%;
}

/* Used to set the width of a gridview and align it in the centre of the screen (best used with gridViews that have a moderate amount of columns with data that is of moderate size such as address) */
/* Use the indent20Percent class in order to align controls with a gridview that uses this class */
.GridViewStyleMedium {
    width : 60%;
    padding-left : 20%;
    padding-right : 20%;
    margin-left : 20%;
    margin-right: 20%;
}

/* Used to set the width of a gridview and align it in the centre of the screen (best used with gridViews that have a small amount of columns with small data such as customer ID) */
/* Use the indent30Percent class in order to align controls with a gridview that uses this class */
.GridViewStyleSmall {
    width : 40%;
    padding-left: 30%;
    padding-right: 30%;
    margin-left: 30%;
    margin-right: 30%;
}


/* Can be used to ensure things such as detailsView align neatly with GridView or other item with a padding / margin of 5% of screen size */
.Margin5Percent {
    margin-left: 5%;
    margin-right: 5%;
}

/* Can be used to ensure things such as detailsView align neatly with GridView or other item with a padding / margin of 10% of screen size */
.Margin10Percent {
    margin-left: 10%;
    margin-right: 10%;
}


/* Can be used to ensure things such as detailsView align neatly with GridView or other item with a padding / margin of 20% of screen size */
.Margin20Percent {
    margin-left : 20%;
    margin-right : 20%;
}

/* Can be used to ensure things such as detailsView align neatly with GridView or other item with a padding / margin of 10% of screen size */
.Margin30Percent {
    padding-left : 30%;
    padding-right : 30%;
    margin-left : 30%;
    margin-right : 30%;
}

/* hides the little X button on a textbox used for clearing the text, good for ensuring a text box cannot be edited */
/* Forms created by visual studio (such as add user) will break if a textbox is set to enabled = false */
/* To ensure a text box cannot be edited using the keyboard, add the below code to the item right after the CssClass="className" */
/* onkeypress="javascript:return false;" onKeyDown="javascript: return false;" onPaste="javascript: return false;"  So the object declaration would look like this: */
/* <asp:TextBox ID="example" runat="server" CssClass="nonEditableField hideClearButton" onkeypress="javascript:return false;" onKeyDown="javascript: return false;" onPaste="javascript: return false;"></asp:TextBox> */
.hideClearButton[type=text]::-ms-clear {
    display: none;
}

/* Makes the background colour of the item yellow, giving a visual indication to the user that the field cannot be edited (can be changed to different colour, is currently yellow) */
.nonEditableField {
    background-color : #FFFF00;
}